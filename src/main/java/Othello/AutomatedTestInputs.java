package Othello;
import java.util.ArrayList;
import java.util.List;

public class AutomatedTestInputs extends KeyboardInput {
	List<Coordinate> coordinates = new ArrayList<>();
	
	public AutomatedTestInputs(int num) {
		if(num == 1) { //White pass bug
			coordinates.add(new Coordinate(5, 6));
			coordinates.add(new Coordinate(6, 4));
			coordinates.add(new Coordinate(3, 3));
			coordinates.add(new Coordinate(3, 4));
			coordinates.add(new Coordinate(4, 3));
			coordinates.add(new Coordinate(4, 6));
			coordinates.add(new Coordinate(6, 6));
			coordinates.add(new Coordinate(5, 7));
			coordinates.add(new Coordinate(3, 5));
			coordinates.add(new Coordinate(3, 6));
			coordinates.add(new Coordinate(4, 7));
			coordinates.add(new Coordinate(3, 8));
			coordinates.add(new Coordinate(6, 5));
			coordinates.add(new Coordinate(3, 7));
			coordinates.add(new Coordinate(6, 7));
			coordinates.add(new Coordinate(7, 6));
			coordinates.add(new Coordinate(4, 8));
			coordinates.add(new Coordinate(5, 8));
			coordinates.add(new Coordinate(7, 3));
			coordinates.add(new Coordinate(5, 3));
			coordinates.add(new Coordinate(4, 2));
			coordinates.add(new Coordinate(2, 5));
			coordinates.add(new Coordinate(1, 5));
			coordinates.add(new Coordinate(4, 1));
			coordinates.add(new Coordinate(3, 2));
			coordinates.add(new Coordinate(2, 6));
			coordinates.add(new Coordinate(3, 1));
			coordinates.add(new Coordinate(7, 5));
			coordinates.add(new Coordinate(8, 5));
			coordinates.add(new Coordinate(6, 2));
			coordinates.add(new Coordinate(5, 2));
			coordinates.add(new Coordinate(2, 1));
			coordinates.add(new Coordinate(6, 3));
			coordinates.add(new Coordinate(5, 1));
			coordinates.add(new Coordinate(6, 8));
			coordinates.add(new Coordinate(7, 8));
			coordinates.add(new Coordinate(8, 6));
			coordinates.add(new Coordinate(1, 6));
			coordinates.add(new Coordinate(2, 3));
			coordinates.add(new Coordinate(1, 4));
			coordinates.add(new Coordinate(1, 3));
			coordinates.add(new Coordinate(2, 4));
			coordinates.add(new Coordinate(1, 7));
			coordinates.add(new Coordinate(7, 7));
			coordinates.add(new Coordinate(2, 7));
			coordinates.add(new Coordinate(1, 8));
			coordinates.add(new Coordinate(2, 8));
			coordinates.add(new Coordinate(8, 3));
			coordinates.add(new Coordinate(7, 1));
			coordinates.add(new Coordinate(6, 1));
			coordinates.add(new Coordinate(1, 1));
			coordinates.add(new Coordinate(8, 4));
			coordinates.add(new Coordinate(7, 4));
			coordinates.add(new Coordinate(7, 2));
			coordinates.add(new Coordinate(2, 2));
			coordinates.add(new Coordinate(8, 7));
			coordinates.add(new Coordinate(8, 8));
			coordinates.add(new Coordinate(1, 2));
			coordinates.add(new Coordinate(8, 2));
			coordinates.add(new Coordinate(8, 1));
		} else if (num == 2) { //Draw game
			coordinates.add(new Coordinate(5, 6));
			coordinates.add(new Coordinate(6, 4));
			coordinates.add(new Coordinate(3, 3));
			coordinates.add(new Coordinate(3, 4));
			coordinates.add(new Coordinate(4, 3));
			coordinates.add(new Coordinate(4, 6));
			coordinates.add(new Coordinate(5, 3));
			coordinates.add(new Coordinate(3, 2));
			coordinates.add(new Coordinate(2, 3));
			coordinates.add(new Coordinate(6, 5));
			coordinates.add(new Coordinate(6, 3));
			coordinates.add(new Coordinate(4, 2));
			coordinates.add(new Coordinate(5, 2));
			coordinates.add(new Coordinate(2, 4));
			coordinates.add(new Coordinate(3, 5));
			coordinates.add(new Coordinate(6, 1));
			coordinates.add(new Coordinate(1, 3));
			coordinates.add(new Coordinate(6, 2));
			coordinates.add(new Coordinate(3, 6));
			coordinates.add(new Coordinate(6, 6));
			coordinates.add(new Coordinate(7, 6));
			coordinates.add(new Coordinate(2, 5));
			coordinates.add(new Coordinate(1, 4));
			coordinates.add(new Coordinate(1, 6));
			coordinates.add(new Coordinate(7, 5));
			coordinates.add(new Coordinate(1, 5));
			coordinates.add(new Coordinate(1, 7));
			coordinates.add(new Coordinate(6, 7));
			coordinates.add(new Coordinate(2, 6));
			coordinates.add(new Coordinate(7, 4));
			coordinates.add(new Coordinate(8, 4));
			coordinates.add(new Coordinate(7, 3));
			coordinates.add(new Coordinate(8, 3));
			coordinates.add(new Coordinate(4, 7));
			coordinates.add(new Coordinate(3, 7));
			coordinates.add(new Coordinate(3, 8));
			coordinates.add(new Coordinate(5, 7));
			coordinates.add(new Coordinate(7, 2));
			coordinates.add(new Coordinate(6, 8));
			coordinates.add(new Coordinate(5, 8));
			coordinates.add(new Coordinate(4, 1));
			coordinates.add(new Coordinate(3, 1));
			coordinates.add(new Coordinate(8, 1));
			coordinates.add(new Coordinate(5, 1));
			coordinates.add(new Coordinate(7, 1));
			coordinates.add(new Coordinate(1, 2));
			coordinates.add(new Coordinate(1, 1));
			coordinates.add(new Coordinate(2, 7));
			coordinates.add(new Coordinate(1, 8));
			coordinates.add(new Coordinate(2, 8));
			coordinates.add(new Coordinate(4, 8));
			coordinates.add(new Coordinate(8, 5));
			coordinates.add(new Coordinate(8, 6));
			coordinates.add(new Coordinate(7, 8));
			coordinates.add(new Coordinate(8, 8));
			coordinates.add(new Coordinate(8, 2));
			coordinates.add(new Coordinate(2, 1));
			coordinates.add(new Coordinate(2, 2));
			coordinates.add(new Coordinate(7, 7));
			coordinates.add(new Coordinate(7, 8));
		} else if (num == 3) { //Not full board game bug
			coordinates.add(new Coordinate(3, 4));
			coordinates.add(new Coordinate(3, 5));
			coordinates.add(new Coordinate(4, 6));
			coordinates.add(new Coordinate(3, 7));
			coordinates.add(new Coordinate(3, 6));
			coordinates.add(new Coordinate(5, 3));
			coordinates.add(new Coordinate(3, 8));
			coordinates.add(new Coordinate(2, 6));
			coordinates.add(new Coordinate(4, 3));
			coordinates.add(new Coordinate(3, 3));
			coordinates.add(new Coordinate(2, 5));
			coordinates.add(new Coordinate(1, 5));
			coordinates.add(new Coordinate(3, 2));
			coordinates.add(new Coordinate(4, 8));
			coordinates.add(new Coordinate(5, 8));
			coordinates.add(new Coordinate(3, 1));
		} else if (num == 4) { //wipe out
			coordinates.add(new Coordinate(3, 4));
			coordinates.add(new Coordinate(5, 3));
			coordinates.add(new Coordinate(6, 4));
			coordinates.add(new Coordinate(3, 5));
			coordinates.add(new Coordinate(4, 2));
			coordinates.add(new Coordinate(3, 3));
			coordinates.add(new Coordinate(2, 4));
			coordinates.add(new Coordinate(4, 3));
			coordinates.add(new Coordinate(4, 6));
		} else if (num == 5) { //white wins
			coordinates.add(new Coordinate(4, 3));
			coordinates.add(new Coordinate(3, 5));
			coordinates.add(new Coordinate(3, 6));
			coordinates.add(new Coordinate(5, 3));
			coordinates.add(new Coordinate(6, 3));
			coordinates.add(new Coordinate(5, 2));
			coordinates.add(new Coordinate(6, 5));
			coordinates.add(new Coordinate(6, 4));
			coordinates.add(new Coordinate(3, 3));
			coordinates.add(new Coordinate(3, 4));
			coordinates.add(new Coordinate(2, 5));
			coordinates.add(new Coordinate(2, 6));
			coordinates.add(new Coordinate(2, 7));
			coordinates.add(new Coordinate(3, 7));
			coordinates.add(new Coordinate(3, 8));
			coordinates.add(new Coordinate(4, 6));
			coordinates.add(new Coordinate(5, 6));
			coordinates.add(new Coordinate(5, 7));
			coordinates.add(new Coordinate(4, 7));
			coordinates.add(new Coordinate(6, 6));
			coordinates.add(new Coordinate(7, 6));
			coordinates.add(new Coordinate(7, 5));
			coordinates.add(new Coordinate(8, 5));
			coordinates.add(new Coordinate(8, 6));
			coordinates.add(new Coordinate(8, 7));
			coordinates.add(new Coordinate(7, 7));
			coordinates.add(new Coordinate(6, 7));
			coordinates.add(new Coordinate(6, 8));
			coordinates.add(new Coordinate(5, 8));
			coordinates.add(new Coordinate(4, 8));
			coordinates.add(new Coordinate(7, 8));
			coordinates.add(new Coordinate(8, 8));
			coordinates.add(new Coordinate(8, 4));
			coordinates.add(new Coordinate(7, 4));
			coordinates.add(new Coordinate(8, 3));
			coordinates.add(new Coordinate(7, 3));
			coordinates.add(new Coordinate(6, 2));
			coordinates.add(new Coordinate(4, 2));
			coordinates.add(new Coordinate(3, 2));
			coordinates.add(new Coordinate(2, 3));
			coordinates.add(new Coordinate(2, 4));
			coordinates.add(new Coordinate(1, 4));
			coordinates.add(new Coordinate(1, 5));
			coordinates.add(new Coordinate(1, 6));
			coordinates.add(new Coordinate(1, 7));
			coordinates.add(new Coordinate(1, 8));
			coordinates.add(new Coordinate(2, 8));
			coordinates.add(new Coordinate(1, 3));
			coordinates.add(new Coordinate(1, 2));
			coordinates.add(new Coordinate(2, 2));
			coordinates.add(new Coordinate(2, 1));
			coordinates.add(new Coordinate(1, 1));
			coordinates.add(new Coordinate(3, 1));
			coordinates.add(new Coordinate(4, 1));
			coordinates.add(new Coordinate(5, 1));
			coordinates.add(new Coordinate(6, 1));
			coordinates.add(new Coordinate(7, 1));
			coordinates.add(new Coordinate(7, 2));
			coordinates.add(new Coordinate(8, 2));
			coordinates.add(new Coordinate(8, 1));
		} else if (num == 6) { //black wins
			coordinates.add(new Coordinate(6, 5));
			coordinates.add(new Coordinate(4, 6));
			coordinates.add(new Coordinate(3, 3));
			coordinates.add(new Coordinate(4, 3));
			coordinates.add(new Coordinate(3, 4));
			coordinates.add(new Coordinate(6, 4));
			coordinates.add(new Coordinate(3, 5));
			coordinates.add(new Coordinate(2, 3));
			coordinates.add(new Coordinate(3, 2));
			coordinates.add(new Coordinate(5, 6));
			coordinates.add(new Coordinate(3, 6));
			coordinates.add(new Coordinate(2, 4));
			coordinates.add(new Coordinate(2, 5));
			coordinates.add(new Coordinate(4, 2));
			coordinates.add(new Coordinate(5, 3));
			coordinates.add(new Coordinate(1, 6));
			coordinates.add(new Coordinate(3, 1));
			coordinates.add(new Coordinate(2, 6));
			coordinates.add(new Coordinate(6, 3));
			coordinates.add(new Coordinate(6, 6));
			coordinates.add(new Coordinate(6, 7));
			coordinates.add(new Coordinate(5, 2));
			coordinates.add(new Coordinate(4, 1));
			coordinates.add(new Coordinate(6, 1));
			coordinates.add(new Coordinate(5, 7));
			coordinates.add(new Coordinate(5, 1));
			coordinates.add(new Coordinate(7, 1));
			coordinates.add(new Coordinate(7, 6));
			coordinates.add(new Coordinate(6, 2));
			coordinates.add(new Coordinate(4, 7));
			coordinates.add(new Coordinate(4, 8));
			coordinates.add(new Coordinate(3, 7));
			coordinates.add(new Coordinate(3, 8));
			coordinates.add(new Coordinate(7, 4));
			coordinates.add(new Coordinate(7, 3));
			coordinates.add(new Coordinate(8, 3));
			coordinates.add(new Coordinate(7, 5));
			coordinates.add(new Coordinate(2, 7));
			coordinates.add(new Coordinate(8, 6));
			coordinates.add(new Coordinate(8, 5));
			coordinates.add(new Coordinate(1, 4));
			coordinates.add(new Coordinate(1, 3));
			coordinates.add(new Coordinate(1, 8));
			coordinates.add(new Coordinate(1, 5));
			coordinates.add(new Coordinate(1, 7));
			coordinates.add(new Coordinate(2, 1));
			coordinates.add(new Coordinate(1, 1));
			coordinates.add(new Coordinate(7, 2));
			coordinates.add(new Coordinate(8, 1));
			coordinates.add(new Coordinate(8, 2));
			coordinates.add(new Coordinate(8, 4));
			coordinates.add(new Coordinate(5, 8));
			coordinates.add(new Coordinate(6, 8));
			coordinates.add(new Coordinate(8, 7));
			coordinates.add(new Coordinate(1, 2));
			coordinates.add(new Coordinate(2, 2));
			coordinates.add(new Coordinate(7, 7));
			coordinates.add(new Coordinate(7, 8));
			coordinates.add(new Coordinate(8, 8));
			coordinates.add(new Coordinate(2, 8));
		}
	}

		protected Coordinate integersCoordinates() {
			Coordinate coordinate = new Coordinate(coordinates.get(0).x, coordinates.get(0).y);
			coordinates.remove(0);
			return coordinate;
		}

 }